{"version":3,"sources":["components/btn-start/index.js","components/btn-start/btn-start.js","components/title/index.js","components/title/title.js","components/itemCard/index.js","components/itemCard/itemCard.js","components/cards/index.js","components/cards/cards.js","components/footer/rs_school_js.svg","components/footer/index.js","components/footer/footer.js","components/greeting/index.js","components/greeting/greeting.js","components/win/index.js","components/win/win.js","components/cards/image/crow.png","components/cards/image/mortis.png","components/cards/image/karl.png","components/cards/image/mr-p.png","components/cards/image/piper.png","components/cards/image/shelly.png","components/cards/arr-cards.js","components/app/index.js","components/app/app.js","index.js"],"names":["BtnStart","onStartGame","className","onClick","Title","itemCard","name","image","id","onRemoteBack","flipped","guessed","data-name","style","background","Cards","itemCards","data","map","card","Footer","href","src","logo","alt","Greeting","Win","arrCards","crow","mortis","karl","mrP","piper","shelly","App","initData","sort","Math","random","useState","saveData","JSON","parse","localStorage","getItem","saveGame","setData","arrFlipped","setArrFlipped","gameState","oldGameState","setGameState","useEffect","length","changeCards","dataFlipped","gameField","serialSaveData","stringify","setItem","filter","el","idx","findIndex","oldItem","newItem","slice","setTimeout","notGuessed","idx0","oldItem0","newItem0","idx1","oldItem1","newItem1","newArr0","newArr1","ReactDOM","render","document","getElementById"],"mappings":"sVAEeA,ECEE,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,YACf,OACI,wBAAQC,UAAY,4BACZC,QAAW,WAAOF,KAD1B,uBCJOG,ECIF,SAAC,GAAmB,IAAlBH,EAAiB,EAAjBA,YAEX,OACA,sBAAKC,UAAW,sCAAhB,UACI,6CACA,cAAC,EAAD,CACID,YAAe,WAAOA,WCVnBI,G,YCEE,SAAC,GAAyD,IAAvDC,EAAsD,EAAtDA,KAAMC,EAAgD,EAAhDA,MAAOC,EAAyC,EAAzCA,GAAIC,EAAqC,EAArCA,aAE7BP,EAAY,OAQhB,OAVsE,EAAvBQ,UAI3CR,GAAa,eAJqD,EAAdS,UAOpDT,GAAa,YAIb,qBAAKA,UAAaA,EACdU,YAAaN,EACbO,MAAS,CAACC,WAAW,OAAD,OAASP,EAAT,MACpBJ,QAAY,kBAAMM,EAAaD,QChB5BO,MCMA,YAAsC,IAAtBN,EAAqB,EAArBA,aAuFrBO,EAvF0C,EAAPC,KAuFlBC,KAAI,SAACC,GACxB,OACI,cAAC,EAAD,CACIX,GAAMW,EAAKX,GAEXF,KAAQa,EAAKb,KACbC,MAASY,EAAKZ,MACdG,QAAYS,EAAKT,QACjBC,QAAYQ,EAAKR,QACjBF,aAAiB,kBAAMA,EAAaU,EAAKX,MALlCW,EAAKX,OAiBxB,OACI,qBAAKN,UAAY,yDAAjB,SACKc,KCtHE,G,MAAA,IAA0B,0CCE1BI,ECGA,WACX,OACI,sBAAKlB,UAAY,wCAAjB,UACI,mBAAGmB,KAAO,kCAAV,4BACA,wCACA,mBAAGA,KAAO,wBAAV,SACI,qBAAKC,IAAOC,EAAMC,IAAM,cCTzBC,G,MCEE,SAAC,GAAkB,EAAjBxB,YACf,OACI,qBAAKC,UAAY,wEAAjB,SACI,4CCLGwB,G,MCEH,WACR,OACI,qBAAKxB,UAAY,uDAAjB,SACI,gDCPG,MAA0B,iCCA1B,MAA0B,mCCA1B,MAA0B,iCCA1B,MAA0B,iCCA1B,MAA0B,kCCA1B,MAA0B,mCC8F1ByB,EAvFE,CACb,CACIrB,KAAM,OACNC,MAAOqB,EACPlB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,SACNC,MAAOsB,EACPnB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,OACNC,MAAOuB,EACPpB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,MACNC,MAAOwB,EACPrB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,QACNC,MAAOyB,EACPtB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,SACNC,MAAO0B,EACPvB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,OACNC,MAAOqB,EACPlB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,SACNC,MAAOsB,EACPnB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,OACNC,MAAOuB,EACPpB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,MACNC,MAAOwB,EACPrB,SAAS,EACTC,SAAS,EACTH,GAAI,GAER,CACIF,KAAM,QACNC,MAAOyB,EACPtB,SAAS,EACTC,SAAS,EACTH,GAAI,IAER,CACIF,KAAM,SACNC,MAAO0B,EACPvB,SAAS,EACTC,SAAS,EACTH,GAAI,KCxFG0B,G,MCUH,WACV,IAAMC,EAAWR,EAASS,MAAK,kBAAMC,KAAKC,SAAW,MADrC,EAoBSC,mBAlBR,WACb,IAAMC,EAAWC,KAAKC,MAAMC,aAAaC,QAAQ,aACjD,OAAIJ,GAGKL,EAaqBU,IApBlB,mBAoBT5B,EApBS,KAoBH6B,EApBG,OAqBqBP,mBAAS,IArB9B,mBAqBTQ,EArBS,KAqBGC,EArBH,OAsBoBT,mBAXf,WACnB,IAAMU,EAAYN,aAAaC,QAAQ,aACvC,OAAIK,GAGK,WAMkCC,IAtB7B,mBAsBRD,EAtBQ,KAsBGE,EAtBH,KAwBhBC,qBAAU,WACkB,IAAtBL,EAAWM,QACXC,IAEuB,KAAvBC,EAAYF,SACdF,EAAa,OACbK,IACAV,EAAQX,MAET,CAAEY,IAELK,qBAAU,WACR,IAAMK,EAAiBhB,KAAKiB,UAAUzC,GACtC0B,aAAagB,QAAQ,WAAYF,GACjCd,aAAagB,QAAQ,YAAaV,KACjC,CAAChC,EAAMgC,IAEV,IAAMM,EAActC,EAAK2C,QAAO,SAACC,GAC/B,OAAOA,EAAGnD,WAUN8C,EAAY,WAEd,OAAQP,GACJ,IAAK,WACH,OAAO,cAAC,EAAD,IACT,IAAK,OACH,OACA,cAAC,EAAD,CACAxC,aAAgBA,EAChBQ,KAASA,IAEX,IAAK,MACH,OAAO,cAAC,EAAD,IACT,QACE,OAAO,cAAC,EAAD,MAIXR,EAAe,SAAED,GACrB,IAAMsD,EAAM7C,EAAK8C,WAAU,SAACF,GAAD,OAAQA,EAAGrD,KAAOA,KACvCwD,EAAU/C,EAAK6C,GACrB,GAAIf,EAAWM,OAAS,IAAMW,EAAQrD,QAAU,CAE5C,IAAMsD,EAAO,2BAAOD,GAAP,IAAgBtD,SAAS,IAMtC,GALAoC,EAAQ,GAAD,mBACA7B,EAAKiD,MAAO,EAAGJ,IADf,CAEHG,GAFG,YAGAhD,EAAKiD,MAAOJ,EAAM,MAED,IAApBf,EAAWM,QAAcN,EAAW,GAAGvC,KAAOA,EAAI,OACtDwC,EAAc,GAAD,mBAAKD,GAAL,CAAiB9B,EAAK6C,QAInCR,EAAc,WACZP,EAAW,GAAGzC,OAASyC,EAAW,GAAGzC,KACrC6D,WAAYC,EAAY,KAExBzD,KAKFyD,EAAa,WACf,IAAMC,EAAOpD,EAAK8C,WAAU,SAACF,GAAD,OAAQA,EAAGrD,KAAOuC,EAAW,GAAGvC,MACtD8D,EAAWrD,EAAKoD,GAChBE,EAAQ,2BAAOD,GAAP,IAAiB5D,SAAS,IAClC8D,EAAOvD,EAAK8C,WAAU,SAACF,GAAD,OAAQA,EAAGrD,KAAOuC,EAAW,GAAGvC,MACtDiE,EAAWxD,EAAKuD,GAChBE,EAAQ,2BAAOD,GAAP,IAAiB/D,SAAS,IAClCiE,EAAO,sBAAO1D,EAAKiD,MAAO,EAAGG,IAAtB,CACGE,GADH,YAEMtD,EAAKiD,MAAOG,EAAO,KAChCO,EAAO,sBAAOD,EAAQT,MAAO,EAAGM,IAAzB,CACGE,GADH,YAEMC,EAAQT,MAAOM,EAAO,KACzC1B,EAAQ8B,GACR5B,EAAc,KAGZrC,EAAU,WACZ,IAAM0D,EAAOpD,EAAK8C,WAAU,SAACF,GAAD,OAAQA,EAAGrD,KAAOuC,EAAW,GAAGvC,MACtD8D,EAAWrD,EAAKoD,GAChBE,EAAQ,2BAAOD,GAAP,IAAiB3D,SAAS,IAClC6D,EAAOvD,EAAK8C,WAAU,SAACF,GAAD,OAAQA,EAAGrD,KAAOuC,EAAW,GAAGvC,MACtDiE,EAAWxD,EAAKuD,GAChBE,EAAQ,2BAAOD,GAAP,IAAiB9D,SAAS,IAClCgE,EAAO,sBAAO1D,EAAKiD,MAAO,EAAGG,IAAtB,CACGE,GADH,YAEMtD,EAAKiD,MAAOG,EAAO,KAChCO,EAAO,sBAAOD,EAAQT,MAAO,EAAGM,IAAzB,CACGE,GADH,YAEMC,EAAQT,MAAOM,EAAO,KACzC1B,EAAQ8B,GACR5B,EAAc,KAMlB,OACI,sBAAK9C,UAAY,MAAjB,UACE,cAAC,EAAD,CACED,YA1FY,WAClBkD,EAAa,QACbK,IACAV,EAAQX,GACRa,EAAc,OAuFR,qBAAK9C,UAAY,UAAjB,SACEsD,MAEJ,cAAC,EAAD,SCjJRqB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b63cbf73.chunk.js","sourcesContent":["import BtnStart from './btn-start'\r\n\r\nexport default BtnStart","import React from 'react'\r\n\r\nimport './btn-start.scss'\r\n\r\nconst BtnStart = ({onStartGame}) => {\r\n    return (\r\n        <button className = 'btn btn-primary btn-start'\r\n                onClick = {() => {onStartGame()} } >\r\n                New game\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default BtnStart","import Title from './title'\r\n\r\nexport default Title;","import React from 'react'\r\n\r\nimport './title.scss'\r\n\r\nimport BtnStart from './../btn-start'\r\n\r\nconst Title =({onStartGame}) => {\r\n    \r\n    return (\r\n    <div className= 'title d-flex justify-content-around'>\r\n        <h1>Memory game</h1>\r\n        <BtnStart \r\n            onStartGame = {() => {onStartGame()} }/>\r\n    </div>\r\n    )\r\n    \r\n}\r\n\r\nexport default Title","import itemCard from './itemCard'\r\n\r\nexport default itemCard","import React from 'react'\r\n\r\nimport './itemCard.scss'\r\n\r\nconst ItemCard = ({ name, image, id, onRemoteBack, flipped, guessed }) => {\r\n\r\n    let className = 'card'\r\n    if ( !flipped ) {\r\n        className += ' back-image'\r\n    }\r\n    if (guessed) {\r\n        className += ' guessed'\r\n    }\r\n\r\n    return (\r\n        <div className = {className}\r\n            data-name = {name}\r\n            style = {{background: `url(${image})`}}\r\n            onClick = { () => onRemoteBack(id) }\r\n            >\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ItemCard","import Cards from './cards'\r\n\r\nexport default Cards","import React from 'react'\r\n\r\nimport './cards.scss'\r\n// import arrCards from './arr-cards'\r\nimport ItemCard from './../itemCard'\r\n// import Win from './../win'\r\n\r\n\r\nexport default function Cards({onRemoteBack, data}) {   \r\n\r\n    // const [data, setArrCards ] = useState([]) \r\n    // const [arrFlipped, setArrFlipped ] = useState([])\r\n    //const [ isWin, setIsWin ] = useState(false)\r\n\r\n    // useEffect(() => {        \r\n    //     setArrCards(arrCards.sort(() => Math.random() - 0.5 ))        \r\n    // }, [])\r\n\r\n    // useEffect(() =>{\r\n    //     if (arrFlipped.length === 2) {\r\n    //         changeCards()                       \r\n    //     }\r\n    //     if (dataFlipped.length === 12){\r\n    //         setIsWin(true)                       \r\n    //     }\r\n\r\n    // }, [ arrFlipped ])\r\n\r\n    \r\n    // const dataFlipped = data.filter((el) => {\r\n    //     return el.flipped\r\n    // })\r\n    \r\n    \r\n\r\n\r\n    // const onRemoteBack = ( id ) => {\r\n    //     const idx = data.findIndex((el) => el.id === id)\r\n    //     const oldItem = data[idx]\r\n    //     if (arrFlipped.length < 2 && !oldItem.guessed ) {\r\n            \r\n    //         const newItem = {...oldItem, flipped: true}\r\n    //         setArrCards([\r\n    //             ...data.slice( 0, idx),\r\n    //             newItem,\r\n    //             ...data.slice( idx + 1)\r\n    //         ]) \r\n    //         if (arrFlipped.length===1 && arrFlipped[0].id === id) return  \r\n    //         setArrFlipped([...arrFlipped, data[idx]])  \r\n    //     }              \r\n    // }   \r\n      \r\n    // const changeCards = () => {\r\n    //     if (arrFlipped[0].name !== arrFlipped[1].name) {\r\n    //         setTimeout( notGuessed, 1000)                                    \r\n    //     } else {\r\n    //         guessed()            \r\n    //     }\r\n        \r\n    // }  \r\n\r\n    // const notGuessed = () => {\r\n    //     const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n    //     const oldItem0 = data[idx0]\r\n    //     const newItem0 = {...oldItem0, flipped: false}\r\n    //     const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n    //     const oldItem1 = data[idx1]\r\n    //     const newItem1 = {...oldItem1, flipped: false}\r\n    //     const newArr0 = [...data.slice( 0, idx0),\r\n    //                     newItem0,\r\n    //                     ...data.slice( idx0 + 1)]\r\n    //     const newArr1 = [...newArr0.slice( 0, idx1),\r\n    //                     newItem1,\r\n    //                     ...newArr0.slice( idx1 + 1)]\r\n    //     setArrCards(newArr1)\r\n    //     setArrFlipped([])\r\n    // }\r\n\r\n    // const guessed = () => {\r\n    //     const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n    //     const oldItem0 = data[idx0]\r\n    //     const newItem0 = {...oldItem0, guessed: true}\r\n    //     const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n    //     const oldItem1 = data[idx1]\r\n    //     const newItem1 = {...oldItem1, guessed: true}\r\n    //     const newArr0 = [...data.slice( 0, idx0),\r\n    //                     newItem0,\r\n    //                     ...data.slice( idx0 + 1)]\r\n    //     const newArr1 = [...newArr0.slice( 0, idx1),\r\n    //                     newItem1,\r\n    //                     ...newArr0.slice( idx1 + 1)]\r\n    //     setArrCards(newArr1)\r\n    //     setArrFlipped([])\r\n    // }\r\n\r\n    const itemCards = data.map((card) => {\r\n        return (\r\n            <ItemCard \r\n                id = {card.id}\r\n                key = {card.id} \r\n                name = {card.name}\r\n                image = {card.image} \r\n                flipped = { card.flipped }\r\n                guessed = { card.guessed }\r\n                onRemoteBack = { () => onRemoteBack(card.id) }                \r\n                />\r\n        )\r\n    })\r\n    \r\n    // const valueField = () => {\r\n    //     if (isWin) {\r\n    //         return <Win /> \r\n    //     } else {\r\n    //         return itemCards}\r\n    // }\r\n\r\n    return (\r\n        <div className = 'cards d-flex justify-content-center align-items-center'>\r\n            {itemCards}\r\n        </div>\r\n    )\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import Footer from './footer'\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport './footer.scss'\r\nimport logo from './rs_school_js.svg'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className = 'footer d-flex justify-content-between'>\r\n            <a href = 'https://github.com/Alena-Zykava'> Alena Zykava </a>\r\n            <span>2021</span>\r\n            <a href = 'https://rs.school/js/'>\r\n                <img src = {logo} alt = 'RSS'/>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import Greeting from './greeting'\r\n\r\nexport default Greeting","import React from 'react'\r\n\r\nimport './greeting.scss'\r\n\r\nconst Greeting = ({onStartGame}) => {\r\n    return (\r\n        <div className = 'greeting d-flex justify-content-center align-items-center flex-column'>\r\n            <h2>Hello!</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting","import Win from './win'\r\n\r\nexport default Win ","import React from 'react'\r\n\r\nimport './win.scss'\r\n\r\nconst Win = () => {\r\n    return (\r\n        <div className = 'win d-flex justify-content-center align-items-center' >\r\n            <h2>You win!!!</h2>\r\n            {/* <button className = 'btn btn-primary btn-start'\r\n                onClick = {() => {onStartGame()} } >\r\n                Click here and the game starts\r\n            </button> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Win","export default __webpack_public_path__ + \"static/media/crow.4eaad05a.png\";","export default __webpack_public_path__ + \"static/media/mortis.5f6c2d9b.png\";","export default __webpack_public_path__ + \"static/media/karl.c837bbcb.png\";","export default __webpack_public_path__ + \"static/media/mr-p.06a1b2f1.png\";","export default __webpack_public_path__ + \"static/media/piper.521eb7e0.png\";","export default __webpack_public_path__ + \"static/media/shelly.314d5794.png\";","import crow from './image/crow.png'\r\nimport mortis from './image/mortis.png'\r\nimport karl from './image/karl.png'\r\nimport mrP from './image/mr-p.png'\r\nimport piper from './image/piper.png'\r\nimport shelly from './image/shelly.png'\r\n\r\nconst arrCards = [\r\n    {\r\n        name: 'crow',\r\n        image: crow,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 0\r\n    },\r\n    {\r\n        name: 'mortis',\r\n        image: mortis,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 1\r\n    },\r\n    {\r\n        name: 'karl',\r\n        image: karl,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 2\r\n    },\r\n    {\r\n        name: 'mrP',\r\n        image: mrP,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 3\r\n    },\r\n    {\r\n        name: 'piper',\r\n        image: piper,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 4\r\n    },    \r\n    {\r\n        name: 'shelly',\r\n        image: shelly,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 5\r\n    },\r\n    {\r\n        name: 'crow',\r\n        image: crow,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 6\r\n    },\r\n    {\r\n        name: 'mortis',\r\n        image: mortis,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 7\r\n    },\r\n    {\r\n        name: 'karl',\r\n        image: karl,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 8\r\n    },\r\n    {\r\n        name: 'mrP',\r\n        image: mrP,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 9\r\n    },\r\n    {\r\n        name: 'piper',\r\n        image: piper,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 10\r\n    },    \r\n    {\r\n        name: 'shelly',\r\n        image: shelly,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 11\r\n    }\r\n]\r\n\r\nexport default arrCards","import App from './app'\r\n\r\nexport default App;","import React, { useState, useEffect } from 'react';\r\n\r\nimport Title from './../title'\r\nimport Cards from './../cards'\r\nimport Footer from './../footer'\r\nimport Greeting from './../greeting'\r\nimport Win from './../win'\r\nimport arrCards from './../cards/arr-cards'\r\n\r\nimport './app.scss';\r\n\r\n\r\nconst App = () => {\r\n  const initData = arrCards.sort(() => Math.random() - 0.5 )\r\n  const saveGame = () => {\r\n      const saveData = JSON.parse(localStorage.getItem('saveData')) \r\n      if (saveData) {\r\n        return saveData\r\n      } else {\r\n        return initData\r\n      }      \r\n    }   \r\n  \r\n  const oldGameState = () => {\r\n    const gameState = localStorage.getItem('gameState')\r\n    if (gameState) {\r\n      return gameState\r\n    } else {\r\n      return 'greeting'\r\n    }\r\n  }\r\n\r\n  const [data, setData ] = useState(saveGame()) \r\n  const [arrFlipped, setArrFlipped ] = useState([])\r\n  const [ gameState, setGameState ] = useState(oldGameState())\r\n  \r\n  useEffect(() =>{\r\n    if (arrFlipped.length === 2) {\r\n        changeCards()                       \r\n    }\r\n    if (dataFlipped.length === 12){\r\n      setGameState('win')\r\n      gameField()  \r\n      setData(initData)                    \r\n    }\r\n  }, [ arrFlipped ])\r\n\r\n  useEffect(() => {\r\n    const serialSaveData = JSON.stringify(data)\r\n    localStorage.setItem('saveData', serialSaveData) \r\n    localStorage.setItem('gameState', gameState)\r\n  }, [data, gameState])  \r\n\r\n  const dataFlipped = data.filter((el) => {\r\n    return el.flipped\r\n  })\r\n\r\n  const onStartGame = () => {\r\n    setGameState('game') \r\n    gameField()  \r\n    setData(initData)\r\n    setArrFlipped([])                  \r\n  }\r\n\r\n  const gameField = () => {\r\n\r\n      switch (gameState) {\r\n          case 'greeting':\r\n            return <Greeting />\r\n          case 'game':\r\n            return (\r\n            <Cards \r\n            onRemoteBack = {onRemoteBack}\r\n            data = { data }/>\r\n            )\r\n          case 'win':\r\n            return <Win />\r\n          default:\r\n            return <Greeting />\r\n        }\r\n  }\r\n\r\n  const onRemoteBack = ( id ) => {\r\n    const idx = data.findIndex((el) => el.id === id)\r\n    const oldItem = data[idx]\r\n    if (arrFlipped.length < 2 && !oldItem.guessed ) {\r\n        \r\n        const newItem = {...oldItem, flipped: true}\r\n        setData([\r\n            ...data.slice( 0, idx),\r\n            newItem,\r\n            ...data.slice( idx + 1)\r\n        ]) \r\n        if (arrFlipped.length===1 && arrFlipped[0].id === id) return  \r\n        setArrFlipped([...arrFlipped, data[idx]])  \r\n    } \r\n  }   \r\n  \r\n  const changeCards = () => {\r\n      if (arrFlipped[0].name !== arrFlipped[1].name) {\r\n          setTimeout( notGuessed, 1000)                                    \r\n      } else {\r\n          guessed()            \r\n      }\r\n      \r\n  }  \r\n\r\n  const notGuessed = () => {\r\n      const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n      const oldItem0 = data[idx0]\r\n      const newItem0 = {...oldItem0, flipped: false}\r\n      const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n      const oldItem1 = data[idx1]\r\n      const newItem1 = {...oldItem1, flipped: false}\r\n      const newArr0 = [...data.slice( 0, idx0),\r\n                      newItem0,\r\n                      ...data.slice( idx0 + 1)]\r\n      const newArr1 = [...newArr0.slice( 0, idx1),\r\n                      newItem1,\r\n                      ...newArr0.slice( idx1 + 1)]\r\n      setData(newArr1)\r\n      setArrFlipped([])\r\n  }\r\n\r\n  const guessed = () => {\r\n      const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n      const oldItem0 = data[idx0]\r\n      const newItem0 = {...oldItem0, guessed: true}\r\n      const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n      const oldItem1 = data[idx1]\r\n      const newItem1 = {...oldItem1, guessed: true}\r\n      const newArr0 = [...data.slice( 0, idx0),\r\n                      newItem0,\r\n                      ...data.slice( idx0 + 1)]\r\n      const newArr1 = [...newArr0.slice( 0, idx1),\r\n                      newItem1,\r\n                      ...newArr0.slice( idx1 + 1)]\r\n      setData(newArr1)\r\n      setArrFlipped([])\r\n  }\r\n\r\n\r\n  \r\n\r\n  return (\r\n      <div className = 'app'>\r\n        <Title \r\n          onStartGame = { onStartGame }/>\r\n          <div className = 'wrapper'>\r\n           {gameField()}  \r\n          </div>  \r\n        <Footer />\r\n      </div>          \r\n  ) \r\n        \r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}