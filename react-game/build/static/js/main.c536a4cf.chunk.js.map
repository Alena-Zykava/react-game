{"version":3,"sources":["components/btn-start/index.js","components/btn-start/btn-start.js","components/score/index.js","components/score/score.js","components/sounds/main-menu-2.mp3","components/sounds/soundbacg.js","components/sounds/soundTouch.js","components/title/index.js","components/title/title.js","components/itemCard/index.js","components/itemCard/itemCard.js","components/cards/index.js","components/cards/cards.js","components/footer/rs_school_js.svg","components/footer/index.js","components/footer/footer.js","components/greeting/index.js","components/greeting/greeting.js","components/cards/image/coins.png","components/win/index.js","components/win/win.js","components/cards/image/crow.png","components/cards/image/mortis.png","components/cards/image/karl.png","components/cards/image/mr-p.png","components/cards/image/piper.png","components/cards/image/shelly.png","components/cards/arr-cards.js","components/sounds/sound.mp3","components/app/index.js","components/app/app.js","index.js"],"names":["BtnStart","onStartGame","className","onClick","Score","count","countMatch","pair","Math","floor","Soundbacgraund","useState","volume","setVolume","useSound","soundBG","loop","play","stop","isPlaying","SoundTouch","musicTouch","playSoundTouch","plusVolume","minusVolume","Title","itemCard","name","image","id","onRemoteBack","flipped","guessed","data-name","style","background","Cards","itemCards","data","map","card","Footer","href","src","logo","alt","Greeting","Win","coins","arrCards","crow","mortis","karl","mrP","piper","shelly","App","initData","sort","random","saveData","JSON","parse","localStorage","getItem","saveGame","setData","arrFlipped","setArrFlipped","gameState","oldGameState","setGameState","returnCountMatch","saveCountMatch","setCountMatch","setMusicTouch","soundTouch","useEffect","length","changeCards","dataFlipped","filter","el","gameField","serialSaveData","stringify","setItem","idx","findIndex","oldItem","newItem","slice","setTimeout","notGuessed","idx0","oldItem0","newItem0","idx1","oldItem1","newItem1","newArr0","newArr1","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c536a4cf.chunk.js","sourcesContent":["import BtnStart from './btn-start'\r\n\r\nexport default BtnStart","import React from 'react'\r\n\r\nimport './btn-start.scss'\r\n\r\nconst BtnStart = ({onStartGame}) => {\r\n    return (\r\n        <div className = 'col-sm-4 text-center'>\r\n           <button className = 'btn btn-primary btn-start'\r\n                onClick = {() => {onStartGame()} } >\r\n                Новая игра\r\n            </button>                   \r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default BtnStart","import Score from './score'\r\n\r\nexport default Score","import React from 'react'\r\n\r\nimport './score.scss'\r\n\r\nconst Score = ({count, countMatch}) => {\r\n    const pair = Math.floor(count / 2)\r\n\r\n    return (        \r\n        <div className = 'score text-center'>\r\n            <div>Вы открыли {pair} из 6 пар</div>      \r\n            <div>Вы выйграли {countMatch} партий</div>      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Score","export default __webpack_public_path__ + \"static/media/main-menu-2.0042de2a.mp3\";","import React, { useState } from 'react'\r\nimport useSound from 'use-sound'\r\n\r\nimport soundBG from './main-menu-2.mp3'\r\n\r\nconst Soundbacgraund = () => {\r\n\r\n    const [volume, setVolume] = useState(0.3)\r\n    const [play, { stop, isPlaying }] = useSound(soundBG, {\r\n        volume,\r\n        loop: true})\r\n    \r\n    const playSound = () => {\r\n        if (isPlaying) {\r\n            return stop()\r\n        } else {\r\n            return play()\r\n        }\r\n    }\r\n\r\n    const plusVolume = () =>{\r\n        setVolume(volume + 0.1)\r\n    }\r\n\r\n    const minusVolume = () =>{\r\n        setVolume(volume - 0.1)\r\n    }\r\n\r\n    const volumeIcon = () => {\r\n        if (isPlaying) {\r\n            return (\r\n                <span className =\"material-icons\">\r\n                    volume_up\r\n                </span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span className =\"material-icons\">\r\n                    volume_off\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'd-flex'>\r\n            <button className= 'btn'\r\n                onClick={playSound}>\r\n                {volumeIcon()}\r\n            </button>\r\n            <div>\r\n                <button \r\n                    className = 'btn'\r\n                    onClick = {plusVolume}> \r\n                    <span className = \"material-icons\">\r\n                        arrow_upward\r\n                    </span>\r\n                </button>\r\n                <button \r\n                    className = 'btn'\r\n                    onClick = {minusVolume}> \r\n                    <span className = \"material-icons\">\r\n                        arrow_downward\r\n                    </span>\r\n                </button>  \r\n            </div>            \r\n        </div>        \r\n    )\r\n}\r\n\r\nexport default Soundbacgraund","import React from 'react'\r\n\r\n\r\nconst SoundTouch = ({musicTouch, playSoundTouch, plusVolume, minusVolume}) => {      \r\n       \r\n    const music = () => {\r\n        if (musicTouch) {\r\n            return (\r\n                <span className = \"material-icons\">\r\n                    music_note\r\n                </span>\r\n            )\r\n        } else {\r\n            return (\r\n                <span className = \"material-icons\">\r\n                    music_off\r\n                </span>\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className = 'd-flex'>\r\n            <button className= 'btn'\r\n                onClick={() => {playSoundTouch()}}>\r\n                {music()}\r\n            </button>  \r\n            <div>\r\n                <button \r\n                    className = 'btn'\r\n                    onClick = {() => {plusVolume()}}> \r\n                    <span className = \"material-icons\">\r\n                        arrow_upward\r\n                    </span>\r\n                </button>\r\n                <button \r\n                    className = 'btn'\r\n                    onClick = {() => {minusVolume()}}> \r\n                    <span className = \"material-icons\">\r\n                        arrow_downward\r\n                    </span>\r\n                </button>  \r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default SoundTouch","import Title from './title'\r\n\r\nexport default Title;","import React from 'react'\r\n\r\nimport './title.scss'\r\n\r\nimport BtnStart from './../btn-start'\r\nimport Score from './../score'\r\nimport {Soundbacgraund, SoundTouch}  from './../sounds'\r\n\r\n\r\nconst Title =({onStartGame, count, countMatch, musicTouch, playSoundTouch, plusVolume, minusVolume}) => {\r\n    \r\n    return (\r\n        <div className = 'container'>\r\n            <div className= 'title row d-flex justify-content-around align-items-center'>\r\n                <div className = 'col-sm-5 text-center'>\r\n                    <h1 className = 'text-center'>Memory</h1>\r\n                    <Score             \r\n                        count = {count}\r\n                        countMatch = {countMatch}/>\r\n                </div>        \r\n                <BtnStart \r\n                    onStartGame = {() => {onStartGame()} }/>\r\n                <div className = 'text-center' >\r\n                    <SoundTouch \r\n                        musicTouch = {musicTouch}\r\n                        playSoundTouch = {() => {playSoundTouch()}}\r\n                        plusVolume = {() => {plusVolume()}}\r\n                        minusVolume = {() => {minusVolume()}}\r\n                    />\r\n                    <Soundbacgraund />   \r\n                </div>        \r\n            </div>\r\n        </div>\r\n    \r\n    )\r\n    \r\n}\r\n\r\nexport default Title","import itemCard from './itemCard'\r\n\r\nexport default itemCard","import React from 'react'\r\n\r\nimport './itemCard.scss'\r\n\r\nconst ItemCard = ({ name, image, id, onRemoteBack, flipped, guessed }) => {\r\n\r\n    let className = 'card'\r\n    if ( !flipped ) {\r\n        className += ' back-image'\r\n    }\r\n    if (guessed) {\r\n        className += ' guessed'\r\n    }\r\n\r\n    return (\r\n        <div className = {className}\r\n            data-name = {name}\r\n            style = {{background: `url(${image})`}}\r\n            onClick = { () => onRemoteBack(id) }\r\n            >\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default ItemCard","import Cards from './cards'\r\n\r\nexport default Cards","import React from 'react'\r\n\r\nimport './cards.scss'\r\n// import arrCards from './arr-cards'\r\nimport ItemCard from './../itemCard'\r\n// import Win from './../win'\r\n\r\n\r\nexport default function Cards({onRemoteBack, data}) {   \r\n\r\n    // const [data, setArrCards ] = useState([]) \r\n    // const [arrFlipped, setArrFlipped ] = useState([])\r\n    //const [ isWin, setIsWin ] = useState(false)\r\n\r\n    // useEffect(() => {        \r\n    //     setArrCards(arrCards.sort(() => Math.random() - 0.5 ))        \r\n    // }, [])\r\n\r\n    // useEffect(() =>{\r\n    //     if (arrFlipped.length === 2) {\r\n    //         changeCards()                       \r\n    //     }\r\n    //     if (dataFlipped.length === 12){\r\n    //         setIsWin(true)                       \r\n    //     }\r\n\r\n    // }, [ arrFlipped ])\r\n\r\n    \r\n    // const dataFlipped = data.filter((el) => {\r\n    //     return el.flipped\r\n    // })\r\n    \r\n    \r\n\r\n\r\n    // const onRemoteBack = ( id ) => {\r\n    //     const idx = data.findIndex((el) => el.id === id)\r\n    //     const oldItem = data[idx]\r\n    //     if (arrFlipped.length < 2 && !oldItem.guessed ) {\r\n            \r\n    //         const newItem = {...oldItem, flipped: true}\r\n    //         setArrCards([\r\n    //             ...data.slice( 0, idx),\r\n    //             newItem,\r\n    //             ...data.slice( idx + 1)\r\n    //         ]) \r\n    //         if (arrFlipped.length===1 && arrFlipped[0].id === id) return  \r\n    //         setArrFlipped([...arrFlipped, data[idx]])  \r\n    //     }              \r\n    // }   \r\n      \r\n    // const changeCards = () => {\r\n    //     if (arrFlipped[0].name !== arrFlipped[1].name) {\r\n    //         setTimeout( notGuessed, 1000)                                    \r\n    //     } else {\r\n    //         guessed()            \r\n    //     }\r\n        \r\n    // }  \r\n\r\n    // const notGuessed = () => {\r\n    //     const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n    //     const oldItem0 = data[idx0]\r\n    //     const newItem0 = {...oldItem0, flipped: false}\r\n    //     const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n    //     const oldItem1 = data[idx1]\r\n    //     const newItem1 = {...oldItem1, flipped: false}\r\n    //     const newArr0 = [...data.slice( 0, idx0),\r\n    //                     newItem0,\r\n    //                     ...data.slice( idx0 + 1)]\r\n    //     const newArr1 = [...newArr0.slice( 0, idx1),\r\n    //                     newItem1,\r\n    //                     ...newArr0.slice( idx1 + 1)]\r\n    //     setArrCards(newArr1)\r\n    //     setArrFlipped([])\r\n    // }\r\n\r\n    // const guessed = () => {\r\n    //     const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n    //     const oldItem0 = data[idx0]\r\n    //     const newItem0 = {...oldItem0, guessed: true}\r\n    //     const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n    //     const oldItem1 = data[idx1]\r\n    //     const newItem1 = {...oldItem1, guessed: true}\r\n    //     const newArr0 = [...data.slice( 0, idx0),\r\n    //                     newItem0,\r\n    //                     ...data.slice( idx0 + 1)]\r\n    //     const newArr1 = [...newArr0.slice( 0, idx1),\r\n    //                     newItem1,\r\n    //                     ...newArr0.slice( idx1 + 1)]\r\n    //     setArrCards(newArr1)\r\n    //     setArrFlipped([])\r\n    // }\r\n\r\n    const itemCards = data.map((card) => {\r\n        return (\r\n            <ItemCard \r\n                id = {card.id}\r\n                key = {card.id} \r\n                name = {card.name}\r\n                image = {card.image} \r\n                flipped = { card.flipped }\r\n                guessed = { card.guessed }\r\n                onRemoteBack = { () => onRemoteBack(card.id) }                \r\n                />\r\n        )\r\n    })\r\n    \r\n    // const valueField = () => {\r\n    //     if (isWin) {\r\n    //         return <Win /> \r\n    //     } else {\r\n    //         return itemCards}\r\n    // }\r\n\r\n    return (\r\n        <div className = 'cards d-flex justify-content-center align-items-center'>\r\n            {itemCards}\r\n        </div>\r\n    )\r\n    \r\n}","export default __webpack_public_path__ + \"static/media/rs_school_js.ad178c0d.svg\";","import Footer from './footer'\r\n\r\nexport default Footer","import React from 'react'\r\n\r\nimport './footer.scss'\r\nimport logo from './rs_school_js.svg'\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div className = 'footer d-flex justify-content-around'>\r\n            <a href = 'https://github.com/Alena-Zykava'> Alena Zykava </a>\r\n            <span>2021</span>\r\n            <a href = 'https://rs.school/js/'>\r\n                <img src = {logo} alt = 'RSS'/>\r\n            </a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import Greeting from './greeting'\r\n\r\nexport default Greeting","import React from 'react'\r\n\r\nimport './greeting.scss'\r\n\r\nconst Greeting = ({onStartGame}) => {\r\n    return (\r\n        <div className = 'greeting d-flex justify-content-center align-items-center flex-column'>\r\n            <h2>Приветствуем Вас в нашей игре!</h2>\r\n            <h3> Нажмите на кнопку \"Новая игра\".</h3> \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting","export default __webpack_public_path__ + \"static/media/coins.260eed48.png\";","import Win from './win'\r\n\r\nexport default Win ","import React from 'react'\r\n\r\nimport './win.scss'\r\n\r\nimport coins from './../cards/image/coins.png'\r\n\r\nconst Win = () => {\r\n    return (\r\n        <div className = 'win d-flex justify-content-center align-items-center flex-column' >\r\n            <h2>Поздравляем!!! Вы выйграли!</h2>\r\n            <img src = {coins} alt = 'Coins'/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Win","export default __webpack_public_path__ + \"static/media/crow.fbc75297.png\";","export default __webpack_public_path__ + \"static/media/mortis.fc27413f.png\";","export default __webpack_public_path__ + \"static/media/karl.e5e44399.png\";","export default __webpack_public_path__ + \"static/media/mr-p.e2b07feb.png\";","export default __webpack_public_path__ + \"static/media/piper.5674cad2.png\";","export default __webpack_public_path__ + \"static/media/shelly.44efc73d.png\";","import crow from './image/crow.png'\r\nimport mortis from './image/mortis.png'\r\nimport karl from './image/karl.png'\r\nimport mrP from './image/mr-p.png'\r\nimport piper from './image/piper.png'\r\nimport shelly from './image/shelly.png'\r\n\r\nconst arrCards = [\r\n    {\r\n        name: 'crow',\r\n        image: crow,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 0\r\n    },\r\n    {\r\n        name: 'mortis',\r\n        image: mortis,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 1\r\n    },\r\n    {\r\n        name: 'karl',\r\n        image: karl,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 2\r\n    },\r\n    {\r\n        name: 'mrP',\r\n        image: mrP,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 3\r\n    },\r\n    {\r\n        name: 'piper',\r\n        image: piper,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 4\r\n    },    \r\n    {\r\n        name: 'shelly',\r\n        image: shelly,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 5\r\n    },\r\n    {\r\n        name: 'crow',\r\n        image: crow,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 6\r\n    },\r\n    {\r\n        name: 'mortis',\r\n        image: mortis,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 7\r\n    },\r\n    {\r\n        name: 'karl',\r\n        image: karl,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 8\r\n    },\r\n    {\r\n        name: 'mrP',\r\n        image: mrP,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 9\r\n    },\r\n    {\r\n        name: 'piper',\r\n        image: piper,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 10\r\n    },    \r\n    {\r\n        name: 'shelly',\r\n        image: shelly,  \r\n        flipped: false,\r\n        guessed: false,\r\n        id: 11\r\n    }\r\n]\r\n\r\nexport default arrCards","export default __webpack_public_path__ + \"static/media/sound.d80746ad.mp3\";","import App from './app'\r\n\r\nexport default App;","import React, { useState, useEffect } from 'react';\r\nimport useSound from 'use-sound'\r\n\r\nimport Title from './../title'\r\nimport Cards from './../cards'\r\nimport Footer from './../footer'\r\nimport Greeting from './../greeting'\r\nimport Win from './../win'\r\nimport arrCards from './../cards/arr-cards'\r\n\r\n\r\nimport soundTouch from './../sounds/sound.mp3'\r\n\r\nimport './app.scss';\r\n\r\nconst App = () => {\r\n  const initData = arrCards.sort(() => Math.random() - 0.5 )\r\n  const saveGame = () => {\r\n      const saveData = JSON.parse(localStorage.getItem('saveData')) \r\n      if (saveData) {\r\n        return saveData\r\n      } else {\r\n        return initData\r\n      }      \r\n    }   \r\n  \r\n  const oldGameState = () => {\r\n    const gameState = localStorage.getItem('gameState')\r\n    if (gameState) {\r\n      return gameState\r\n    } else {\r\n      return 'greeting'\r\n    }\r\n  }\r\n\r\n  const saveCountMatch = () => {\r\n    const returnCountMatch = localStorage.getItem('saveCountMatch')\r\n    if (returnCountMatch) {\r\n      return returnCountMatch\r\n    } else {\r\n      return 0\r\n    }\r\n  }\r\n\r\n  const [ data, setData ] = useState(saveGame()) \r\n  const [ arrFlipped, setArrFlipped ] = useState([])\r\n  const [ gameState, setGameState ] = useState(oldGameState())\r\n  const [ countMatch, setCountMatch ] = useState(saveCountMatch())\r\n  const [ musicTouch, setMusicTouch ] = useState(false)\r\n  const [volume, setVolume] = useState(0.3)\r\n\r\n  const [ play ] = useSound(soundTouch, {volume})\r\n  \r\n  useEffect(() =>{\r\n    if (arrFlipped.length === 2) {\r\n        changeCards()                       \r\n    }    \r\n  }, [ arrFlipped])\r\n\r\n  const dataFlipped = data.filter((el) => {\r\n      return el.flipped\r\n    })\r\n\r\n  useEffect(() => {\r\n    if (dataFlipped.length === 12){\r\n      setGameState('win')\r\n      gameField()\r\n      setCountMatch(+ countMatch + 1)                         \r\n    }\r\n  }, [dataFlipped.length ])\r\n\r\n\r\n  useEffect(() => {\r\n    const serialSaveData = JSON.stringify(data)\r\n    localStorage.setItem('saveData', serialSaveData) \r\n    localStorage.setItem('gameState', gameState)\r\n    localStorage.setItem('saveCountMatch', countMatch)\r\n  }, [data, gameState, countMatch])  \r\n\r\n  \r\n\r\n  const onStartGame = () => {\r\n    setGameState('game') \r\n    gameField()  \r\n    setData(initData)\r\n    setArrFlipped([])                      \r\n  }\r\n\r\n  const gameField = () => {\r\n\r\n      switch (gameState) {\r\n          case 'greeting':\r\n            return <Greeting />\r\n          case 'game':\r\n            return (\r\n            <Cards \r\n            onRemoteBack = {onRemoteBack}\r\n            data = { data }/>\r\n            )\r\n          case 'win':\r\n            return <Win />\r\n          default:\r\n            return <Greeting />\r\n        }\r\n  }\r\n\r\n  const onRemoteBack = ( id ) => {\r\n    const idx = data.findIndex((el) => el.id === id)\r\n    const oldItem = data[idx]\r\n    if (arrFlipped.length < 2 && !oldItem.guessed ) {        \r\n        const newItem = {...oldItem, flipped: true}\r\n        setData([\r\n            ...data.slice( 0, idx),\r\n            newItem,\r\n            ...data.slice( idx + 1)\r\n        ]) \r\n        if (arrFlipped.length===1 && arrFlipped[0].id === id) return  \r\n        setArrFlipped([...arrFlipped, data[idx]])  \r\n        if (musicTouch) {\r\n          return play()   \r\n        }\r\n    }      \r\n  }   \r\n  \r\n  const changeCards = () => {\r\n      if (arrFlipped[0].name !== arrFlipped[1].name) {\r\n          setTimeout( notGuessed, 1000)                                    \r\n      } else {\r\n          guessed()            \r\n      }\r\n      \r\n  }  \r\n\r\n  const notGuessed = () => {\r\n      const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n      const oldItem0 = data[idx0]\r\n      const newItem0 = {...oldItem0, flipped: false}\r\n      const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n      const oldItem1 = data[idx1]\r\n      const newItem1 = {...oldItem1, flipped: false}\r\n      const newArr0 = [...data.slice( 0, idx0),\r\n                      newItem0,\r\n                      ...data.slice( idx0 + 1)]\r\n      const newArr1 = [...newArr0.slice( 0, idx1),\r\n                      newItem1,\r\n                      ...newArr0.slice( idx1 + 1)]\r\n      setData(newArr1)\r\n      setArrFlipped([])\r\n  }\r\n\r\n  const guessed = () => {\r\n      const idx0 = data.findIndex((el) => el.id === arrFlipped[0].id)\r\n      const oldItem0 = data[idx0]\r\n      const newItem0 = {...oldItem0, guessed: true}\r\n      const idx1 = data.findIndex((el) => el.id === arrFlipped[1].id)\r\n      const oldItem1 = data[idx1]\r\n      const newItem1 = {...oldItem1, guessed: true}\r\n      const newArr0 = [...data.slice( 0, idx0),\r\n                      newItem0,\r\n                      ...data.slice( idx0 + 1)]\r\n      const newArr1 = [...newArr0.slice( 0, idx1),\r\n                      newItem1,\r\n                      ...newArr0.slice( idx1 + 1)]\r\n      setData(newArr1)\r\n      setArrFlipped([])\r\n  }\r\n\r\n  const playSoundTouch = () =>{\r\n    setMusicTouch(!musicTouch)\r\n  }  \r\n\r\n  const plusVolume = () =>{\r\n    setVolume(volume + 0.1)\r\n  }\r\n\r\n  const minusVolume = () =>{\r\n      setVolume(volume - 0.1)\r\n  }\r\n\r\n  return (\r\n      <div className = 'app'>\r\n        <Title \r\n          onStartGame = { onStartGame }\r\n          count = {dataFlipped.length} \r\n          countMatch = {countMatch} \r\n          musicTouch = {musicTouch}\r\n          playSoundTouch = {playSoundTouch}\r\n          plusVolume = {plusVolume}\r\n          minusVolume = {minusVolume}\r\n          />\r\n          <div className = 'wrapper'>\r\n           {gameField()}  \r\n          </div>  \r\n        <Footer />\r\n      </div>          \r\n  ) \r\n        \r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './components/app';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}